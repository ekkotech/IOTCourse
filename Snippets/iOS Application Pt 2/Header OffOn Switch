***************
Snip 1 - IBAction handler

@IBAction func offOnButtonTouchUpInside(_ sender: UIButton) {
if let md = model {
md.set(entity: kEntityLssOffOn, value: !sender.isSelected, response: false)
}
}

***************
Snip 2 - Subscription

nc.addObserver(forName: .entityLssOffOn,
object: nil,
queue: OperationQueue.main,
using: { notification in
if let payload = notification.object as? BinaryPayload {
self.offOnButton.isSelected = payload.value
}
})

****************
Snip 3 - Model

self.offOn.get()

